Copying config/rest_framework/rest_framework_settings.py to src/django-rest-framework/tests/conftest.py
Copying config/rest_framework/rest_framework_apps.py to src/django-rest-framework/tests/mongo_apps.py
Running ./runtests.py
============================= test session starts ==============================
platform darwin -- Python 3.13.2, pytest-8.3.5, pluggy-1.5.0
django: version: 5.1.8.dev20250308005428
rootdir: /Users/alex.clark/Developer/django-mongodb-cli/src/django-rest-framework
configfile: setup.cfg
testpaths: tests
plugins: html-4.1.1, metadata-3.1.1, django-4.10.0
collected 1558 items

tests/authentication/test_authentication.py ............................ [  1%]
...............................                                          [  3%]
tests/browsable_api/test_browsable_api.py F........                      [  4%]
tests/browsable_api/test_browsable_nested_api.py .                       [  4%]
tests/browsable_api/test_form_rendering.py ..F                           [  4%]
tests/generic_relations/test_generic_relations.py FF                     [  4%]
tests/schemas/test_coreapi.py sssssssssss.s.s..ssssssssssss              [  6%]
tests/schemas/test_get_schema_view.py s.                                 [  6%]
tests/schemas/test_managementcommand.py ssssssss                         [  7%]
tests/schemas/test_openapi.py ........ssssssssssssssssssssssssssssssssss [  9%]
sssssssssssssssss                                                        [ 11%]
tests/test_api_client.py ssssssssssssssssssss                            [ 12%]
tests/test_atomic_requests.py ssss                                       [ 12%]
tests/test_authtoken.py ...........                                      [ 13%]
tests/test_decorators.py ...................                             [ 14%]
tests/test_description.py s.........                                     [ 15%]
tests/test_encoders.py s.........                                        [ 15%]
tests/test_exceptions.py ........                                        [ 16%]
tests/test_fields.py ......................                              [ 17%]
tests/test_filters.py .sFFFFFF..FFFFF...FFF.FFFFFFFF..FFFFFF             [ 20%]
tests/test_generics.py .FFF.F.FF.FF.FFFF.FF..FFF.................        [ 22%]
tests/test_htmlrenderer.py .........                                     [ 23%]
tests/test_lazy_hyperlinks.py F                                          [ 23%]
tests/test_metadata.py ....                                              [ 23%]
tests/test_middleware.py ......                                          [ 24%]
tests/test_model_serializer.py ..................s...........FFFFF...... [ 26%]
FF......F........                                                        [ 27%]
tests/test_multitable_inheritance.py ...                                 [ 28%]
tests/test_negotiation.py ...........                                    [ 28%]
tests/test_one_to_one_with_inheritance.py .                              [ 28%]
tests/test_pagination.py .........FF                                     [ 29%]
tests/test_parsers.py ............                                       [ 30%]
tests/test_permissions.py .......FFFFF..FF.ssssssssss.FF................ [ 33%]
....                                                                     [ 33%]
tests/test_prefetch_related.py FFF                                       [ 33%]
tests/test_relations_hyperlink.py FFFFFFFFFFFFFFFFFFFFFF                 [ 35%]
tests/test_relations_pk.py FFF.FFFFF.FFFF.....FFFFFFFFFFF..F.F.          [ 37%]
tests/test_relations_slug.py FFFFFFFFFFFFFFF                             [ 38%]
tests/test_renderers.py ...................FF.......................sss  [ 41%]
tests/test_request.py ...........................                        [ 43%]
tests/test_requests_client.py ..........                                 [ 43%]
tests/test_response.py ...................                               [ 44%]
tests/test_reverse.py ...                                                [ 45%]
tests/test_routers.py .................................................. [ 48%]
..........                                                               [ 49%]
tests/test_serializer_bulk_update.py .....                               [ 49%]
tests/test_serializer_lists.py F                                         [ 49%]
tests/test_serializer_nested.py ..                                       [ 49%]
tests/test_settings.py .....                                             [ 49%]
tests/test_status.py .                                                   [ 49%]
tests/test_templatetags.py ....................sssssss                   [ 51%]
tests/test_testing.py ........................                           [ 53%]
tests/test_throttling.py .............................                   [ 55%]
tests/test_urlpatterns.py ...........                                    [ 55%]
tests/test_utils.py ........................                             [ 57%]
tests/test_validation.py ........F.....                                  [ 58%]
tests/test_validation_error.py .....                                     [ 58%]
tests/test_validators.py F............................F..F...F.F........ [ 61%]
.                                                                        [ 61%]
tests/test_versioning.py ..........                                      [ 62%]
tests/test_views.py .......                                              [ 62%]
tests/test_viewsets.py ..................                                [ 63%]
tests/test_write_only_fields.py ..                                       [ 63%]
tests/test_atomic_requests.py s                                          [ 64%]
tests/importable/test_installed.py ...                                   [ 64%]
tests/schemas/test_coreapi.py ...ss                                      [ 64%]
tests/test_bound_fields.py ...........                                   [ 65%]
tests/test_description.py .                                              [ 65%]
tests/test_exceptions.py ..                                              [ 65%]
tests/test_fields.py ................................................... [ 68%]
........................................................................ [ 73%]
...............................................F........................ [ 77%]
........................................................................ [ 82%]
............................                                             [ 84%]
tests/test_filters.py ....                                               [ 84%]
tests/test_metadata.py ..........                                        [ 85%]
tests/test_pagination.py ..............................FF.........       [ 87%]
tests/test_relations.py ................................................ [ 91%]
......                                                                   [ 91%]
tests/test_renderers.py .........                                        [ 91%]
tests/test_serializer.py ............................................... [ 94%]
.........                                                                [ 95%]
tests/test_serializer_lists.py ..................................        [ 97%]
tests/test_serializer_nested.py ................                         [ 98%]
tests/test_templates.py ..                                               [ 98%]
tests/test_testing.py .                                                  [ 98%]
tests/test_versioning.py ................                                [100%]

=================================== FAILURES ===================================
_ AnonymousUserTests.test_get_raises_typeerror_when_anonymous_user_in_queryset_filter _
tests/browsable_api/test_browsable_api.py:22: in test_get_raises_typeerror_when_anonymous_user_in_queryset_filter
    self.client.get('/basicviewset')
rest_framework/test.py:292: in get
    response = super().get(path, data=data, **extra)
rest_framework/test.py:209: in get
    return self.generic('GET', path, **r)
rest_framework/test.py:237: in generic
    return super().generic(
../django/django/test/client.py:676: in generic
    return self.request(**r)
rest_framework/test.py:289: in request
    return super().request(**kwargs)
rest_framework/test.py:241: in request
    request = super().request(**kwargs)
../django/django/test/client.py:1087: in request
    response = self.handler(environ)
../django/django/test/client.py:186: in __call__
    response = self.get_response(request)
rest_framework/test.py:261: in get_response
    return super().get_response(request)
../django/django/core/handlers/base.py:140: in get_response
    response = self._middleware_chain(request)
../django/django/core/handlers/exception.py:57: in inner
    response = response_for_exception(request, exc)
../django/django/core/handlers/exception.py:140: in response_for_exception
    response = handle_uncaught_exception(
../django/django/core/handlers/exception.py:55: in inner
    response = get_response(request)
../django/django/utils/deprecation.py:129: in __call__
    response = response or self.get_response(request)
../django/django/core/handlers/exception.py:57: in inner
    response = response_for_exception(request, exc)
../django/django/core/handlers/exception.py:140: in response_for_exception
    response = handle_uncaught_exception(
../django/django/core/handlers/exception.py:55: in inner
    response = get_response(request)
../django/django/utils/deprecation.py:129: in __call__
    response = response or self.get_response(request)
../django/django/core/handlers/exception.py:57: in inner
    response = response_for_exception(request, exc)
../django/django/core/handlers/exception.py:140: in response_for_exception
    response = handle_uncaught_exception(
../django/django/core/handlers/exception.py:55: in inner
    response = get_response(request)
../django/django/utils/deprecation.py:129: in __call__
    response = response or self.get_response(request)
../django/django/core/handlers/exception.py:57: in inner
    response = response_for_exception(request, exc)
../django/django/core/handlers/exception.py:140: in response_for_exception
    response = handle_uncaught_exception(
../django/django/core/handlers/exception.py:55: in inner
    response = get_response(request)
../django/django/utils/deprecation.py:129: in __call__
    response = response or self.get_response(request)
../django/django/core/handlers/exception.py:57: in inner
    response = response_for_exception(request, exc)
../django/django/core/handlers/exception.py:140: in response_for_exception
    response = handle_uncaught_exception(
../django/django/core/handlers/exception.py:55: in inner
    response = get_response(request)
../django/django/core/handlers/base.py:197: in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
rest_framework/viewsets.py:125: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/mixins.py:38: in list
    queryset = self.filter_queryset(self.get_queryset())
tests/browsable_api/views.py:32: in get_queryset
    qs = super().get_queryset().filter(users=self.request.user)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/fields/related_lookups.py:156: in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“AnonymousUser” is not a valid Object Id.']
__________________ TestManyPostView.test_post_many_post_view ___________________
tests/browsable_api/test_form_rendering.py:82: in test_post_many_post_view
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
tests/browsable_api/test_form_rendering.py:28: in post
    return Response(serializer.data, status.HTTP_200_OK)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________________ TestGenericRelations.test_generic_fk _____________________
../django/django/db/models/fields/__init__.py:2126: in get_prep_value
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'

The above exception was the direct cause of the following exception:
tests/generic_relations/test_generic_relations.py:11: in setUp
    Tag.objects.create(tagged_item=self.bookmark, tag='django')
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:679: in create
    obj.save(force_insert=True, using=self.db)
../django/django/db/models/base.py:892: in save
    self.save_base(
../django/django/db/models/base.py:998: in save_base
    updated = self._save_table(
../django/django/db/models/base.py:1161: in _save_table
    results = self._do_insert(
../django/django/db/models/base.py:1202: in _do_insert
    return manager._insert(
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:1847: in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
../django-mongodb-backend/django_mongodb_backend/compiler.py:665: in execute_sql
    value = field.get_db_prep_save(
../django/django/db/models/fields/__init__.py:1011: in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
../django/django/db/models/fields/__init__.py:2133: in get_db_prep_value
    value = super().get_db_prep_value(value, connection, prepared)
../django/django/db/models/fields/__init__.py:1004: in get_db_prep_value
    value = self.get_prep_value(value)
../django/django/db/models/fields/__init__.py:2128: in get_prep_value
    raise e.__class__(
E   TypeError: Field 'object_id' expected a number but got ObjectId('67e4683698c4c549af13678a').
__________________ TestGenericRelations.test_generic_relation __________________
../django/django/db/models/fields/__init__.py:2126: in get_prep_value
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'

The above exception was the direct cause of the following exception:
tests/generic_relations/test_generic_relations.py:11: in setUp
    Tag.objects.create(tagged_item=self.bookmark, tag='django')
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:679: in create
    obj.save(force_insert=True, using=self.db)
../django/django/db/models/base.py:892: in save
    self.save_base(
../django/django/db/models/base.py:998: in save_base
    updated = self._save_table(
../django/django/db/models/base.py:1161: in _save_table
    results = self._do_insert(
../django/django/db/models/base.py:1202: in _do_insert
    return manager._insert(
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:1847: in _insert
    return query.get_compiler(using=using).execute_sql(returning_fields)
../django-mongodb-backend/django_mongodb_backend/compiler.py:665: in execute_sql
    value = field.get_db_prep_save(
../django/django/db/models/fields/__init__.py:1011: in get_db_prep_save
    return self.get_db_prep_value(value, connection=connection, prepared=False)
../django/django/db/models/fields/__init__.py:2133: in get_db_prep_value
    value = super().get_db_prep_value(value, connection, prepared)
../django/django/db/models/fields/__init__.py:1004: in get_db_prep_value
    value = self.get_prep_value(value)
../django/django/db/models/fields/__init__.py:2128: in get_prep_value
    raise e.__class__(
E   TypeError: Field 'object_id' expected a number but got ObjectId('67e4683698c4c549af13697b').
_____________________ SearchFilterTests.test_exact_search ______________________
tests/test_filters.py:130: in test_exact_search
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________________ SearchFilterTests.test_regexp_search _____________________
tests/test_filters.py:158: in test_regexp_search
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________________________ SearchFilterTests.test_search _________________________
tests/test_filters.py:102: in test_search
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________ SearchFilterTests.test_search_field_with_additional_transforms ________
../django-mongodb-backend/django_mongodb_backend/query.py:19: in wrapper
    return func(*args, **kwargs)
../django-mongodb-backend/django_mongodb_backend/query.py:74: in get_cursor
    return self.compiler.collection.aggregate(self.get_pipeline())
../mongo-python-driver/pymongo/synchronous/collection.py:2978: in aggregate
    return self._aggregate(
../mongo-python-driver/pymongo/_csot.py:119: in csot_wrapper
    return func(self, *args, **kwargs)
../mongo-python-driver/pymongo/synchronous/collection.py:2886: in _aggregate
    return self._database.client._retryable_read(
../mongo-python-driver/pymongo/synchronous/mongo_client.py:1988: in _retryable_read
    return self._retry_internal(
../mongo-python-driver/pymongo/_csot.py:119: in csot_wrapper
    return func(self, *args, **kwargs)
../mongo-python-driver/pymongo/synchronous/mongo_client.py:1955: in _retry_internal
    ).run()
../mongo-python-driver/pymongo/synchronous/mongo_client.py:2691: in run
    return self._read() if self._is_read else self._write()
../mongo-python-driver/pymongo/synchronous/mongo_client.py:2834: in _read
    return self._func(self._session, self._server, conn, read_pref)  # type: ignore
../mongo-python-driver/pymongo/synchronous/aggregation.py:164: in get_cursor
    result = conn.command(
../mongo-python-driver/pymongo/synchronous/helpers.py:47: in inner
    return func(*args, **kwargs)
../mongo-python-driver/pymongo/synchronous/pool.py:534: in command
    return command(
../mongo-python-driver/pymongo/synchronous/network.py:217: in command
    helpers_shared._check_command_response(
../mongo-python-driver/pymongo/helpers_shared.py:250: in _check_command_response
    raise OperationFailure(errmsg, code, response, max_wire_version)
E   pymongo.errors.OperationFailure: $trim only supports an object as an argument, found string, full error: {'ok': 0.0, 'errmsg': '$trim only supports an object as an argument, found string', 'code': 50696, 'codeName': 'Location50696'}

The above exception was the direct cause of the following exception:
tests/test_filters.py:253: in test_search_field_with_additional_transforms
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
../django/django/db/models/query.py:400: in __iter__
    self._fetch_all()
../django/django/db/models/query.py:1928: in _fetch_all
    self._result_cache = list(self._iterable_class(self))
../django/django/db/models/query.py:91: in __iter__
    results = compiler.execute_sql(
../django-mongodb-backend/django_mongodb_backend/compiler.py:254: in execute_sql
    cursor = query.get_cursor()
../django-mongodb-backend/django_mongodb_backend/query.py:27: in wrapper
    raise DatabaseError from e
E   django.db.utils.DatabaseError
____________ SearchFilterTests.test_search_field_with_custom_lookup ____________
tests/test_filters.py:224: in test_search_field_with_custom_lookup
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________ SearchFilterTests.test_search_field_with_escapes _______________
tests/test_filters.py:289: in test_search_field_with_escapes
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________ SearchFilterTests.test_search_field_with_quotes ________________
tests/test_filters.py:302: in test_search_field_with_quotes
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_ SearchFilterTests.test_search_returns_same_queryset_if_no_search_fields_or_terms_provided _
tests/test_filters.py:116: in test_search_returns_same_queryset_if_no_search_fields_or_terms_provided
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________ SearchFilterTests.test_search_with_filter_subclass ______________
tests/test_filters.py:199: in test_search_with_filter_subclass
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ SearchFilterTests.test_search_with_nonstandard_search_param __________
tests/test_filters.py:175: in test_search_with_nonstandard_search_param
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___________________ SearchFilterTests.test_startswith_search ___________________
tests/test_filters.py:144: in test_startswith_search
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________________ SearchFilterM2MTests.test_m2m_search _____________________
tests/test_filters.py:389: in setUp
    SearchFilterModelM2M.objects.get(title='zz').attributes.add(1, 2, 3)
../django/django/db/models/fields/related_descriptors.py:1253: in add
    self._add_items(
../django/django/db/models/fields/related_descriptors.py:1513: in _add_items
    target_ids = self._get_target_ids(target_field_name, objs)
../django/django/db/models/fields/related_descriptors.py:1447: in _get_target_ids
    target_ids.add(target_field.get_prep_value(obj))
../django/django/db/models/fields/related.py:1148: in get_prep_value
    return self.target_field.get_prep_value(value)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_________________ SearchFilterM2MTests.test_must_call_distinct _________________
tests/test_filters.py:389: in setUp
    SearchFilterModelM2M.objects.get(title='zz').attributes.add(1, 2, 3)
../django/django/db/models/fields/related_descriptors.py:1253: in add
    self._add_items(
../django/django/db/models/fields/related_descriptors.py:1513: in _add_items
    target_ids = self._get_target_ids(target_field_name, objs)
../django/django/db/models/fields/related_descriptors.py:1447: in _get_target_ids
    target_ids.add(target_field.get_prep_value(obj))
../django/django/db/models/fields/related.py:1148: in get_prep_value
    return self.target_field.get_prep_value(value)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
___________ SearchFilterToManyTests.test_multiple_filter_conditions ____________
tests/test_filters.py:458: in test_multiple_filter_conditions
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________ SearchFilterAnnotatedFieldTests.test_search_in_annotated_field ________
tests/test_filters.py:490: in test_search_in_annotated_field
    assert len(response.data) == 1
E   assert 2 == 1
E    +  where 2 = len([{'title': 'abc', 'text': 'def', 'title_text': 'ABCDEF'}, {'title': 'ghi', 'text': 'jkl', 'title_text': 'GHIJKL'}])
E    +    where [{'title': 'abc', 'text': 'def', 'title_text': 'ABCDEF'}, {'title': 'ghi', 'text': 'jkl', 'title_text': 'GHIJKL'}] = <Response status_code=200, "text/html; charset=utf-8">.data
__________________ OrderingFilterTests.test_default_ordering ___________________
tests/test_filters.py:701: in test_default_ordering
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
____________ OrderingFilterTests.test_default_ordering_using_string ____________
tests/test_filters.py:718: in test_default_ordering_using_string
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________________ OrderingFilterTests.test_get_template_context _________________
tests/test_filters.py:814: in test_get_template_context
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________ OrderingFilterTests.test_incorrectfield_ordering _______________
tests/test_filters.py:648: in test_incorrectfield_ordering
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ OrderingFilterTests.test_incorrecturl_extrahyphens_ordering __________
tests/test_filters.py:631: in test_incorrecturl_extrahyphens_ordering
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________________ OrderingFilterTests.test_ordering _______________________
tests/test_filters.py:597: in test_ordering
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________ OrderingFilterTests.test_ordering_by_aggregate_field _____________
tests/test_filters.py:746: in test_ordering_by_aggregate_field
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______ OrderingFilterTests.test_ordering_with_nonstandard_ordering_param _______
tests/test_filters.py:796: in test_ordering_with_nonstandard_ordering_param
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
____ OrderingFilterTests.test_ordering_with_overridden_get_serializer_class ____
tests/test_filters.py:831: in test_ordering_with_overridden_get_serializer_class
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
__________ OrderingFilterTests.test_ordering_without_ordering_fields ___________
tests/test_filters.py:666: in test_ordering_without_ordering_fields
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
__________________ OrderingFilterTests.test_reverse_ordering ___________________
tests/test_filters.py:614: in test_reverse_ordering
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___ SensitiveOrderingFilterTests.test_cannot_order_by_non_serializer_fields ____
tests/test_filters.py:931: in test_cannot_order_by_non_serializer_fields
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ SensitiveOrderingFilterTests.test_order_by_serializer_fields _________
tests/test_filters.py:904: in test_order_by_serializer_fields
    response = view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:203: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________________ TestRootView.test_get_root_view ________________________
tests/test_generics.py:102: in test_get_root_view
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:243: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________________ TestRootView.test_head_root_view _______________________
tests/test_generics.py:112: in test_head_root_view
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:243: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________________ TestRootView.test_post_cannot_set_id _____________________
tests/test_generics.py:156: in test_post_cannot_set_id
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:246: in post
    return self.create(request, *args, **kwargs)
rest_framework/mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________________ TestRootView.test_post_root_view _______________________
tests/test_generics.py:122: in test_post_root_view
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:246: in post
    return self.create(request, *args, **kwargs)
rest_framework/mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
__________________ TestInstanceView.test_delete_instance_view __________________
tests/test_generics.py:245: in test_delete_instance_view
    with self.assertNumQueries(2):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 2 : 0 queries executed, 2 expected
E   Captured queries were:
___________________ TestInstanceView.test_get_instance_view ____________________
tests/test_generics.py:197: in test_get_instance_view
    with self.assertNumQueries(1):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 1 : 0 queries executed, 1 expected
E   Captured queries were:
_____________ TestInstanceView.test_patch_cannot_create_an_object ______________
tests/test_generics.py:304: in test_patch_cannot_create_an_object
    with self.assertNumQueries(1):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 1 : 0 queries executed, 1 expected
E   Captured queries were:
__________________ TestInstanceView.test_patch_instance_view ___________________
tests/test_generics.py:233: in test_patch_instance_view
    with self.assertNumQueries(EXPECTED_QUERIES_FOR_PUT):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 2 : 0 queries executed, 2 expected
E   Captured queries were:
___________________ TestInstanceView.test_put_cannot_set_id ____________________
tests/test_generics.py:268: in test_put_cannot_set_id
    with self.assertNumQueries(EXPECTED_QUERIES_FOR_PUT):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 2 : 0 queries executed, 2 expected
E   Captured queries were:
________________ TestInstanceView.test_put_error_instance_view _________________
tests/test_generics.py:317: in test_put_error_instance_view
    assert expected_error in response.rendered_content.decode()
E   assert '<span class="help-block">Ensure this field has no more than 100 characters.</span>' in '\n\n\n\n<!DOCTYPE html>\n<html>\n  <head>\n    \n\n      \n        <meta http-equiv="Content-Type" content="text/html...</script>\n      <script src="/static/rest_framework/js/load-ajax-form.js"></script>\n    \n\n  </body>\n  \n</html>\n'
E    +  where '\n\n\n\n<!DOCTYPE html>\n<html>\n  <head>\n    \n\n      \n        <meta http-equiv="Content-Type" content="text/html...</script>\n      <script src="/static/rest_framework/js/load-ajax-form.js"></script>\n    \n\n  </body>\n  \n</html>\n' = <built-in method decode of bytes object at 0x10502fe00>()
E    +    where <built-in method decode of bytes object at 0x10502fe00> = b'\n\n\n\n<!DOCTYPE html>\n<html>\n  <head>\n    \n\n      \n        <meta http-equiv="Content-Type" content="text/htm...</script>\n      <script src="/static/rest_framework/js/load-ajax-form.js"></script>\n    \n\n  </body>\n  \n</html>\n'.decode
E    +      where b'\n\n\n\n<!DOCTYPE html>\n<html>\n  <head>\n    \n\n      \n        <meta http-equiv="Content-Type" content="text/htm...</script>\n      <script src="/static/rest_framework/js/load-ajax-form.js"></script>\n    \n\n  </body>\n  \n</html>\n' = <Response status_code=404, "text/html; charset=utf-8">.rendered_content
___________________ TestInstanceView.test_put_instance_view ____________________
tests/test_generics.py:219: in test_put_instance_view
    with self.assertNumQueries(EXPECTED_QUERIES_FOR_PUT):
../django/django/test/testcases.py:128: in __exit__
    self.test_case.assertEqual(
E   AssertionError: 0 != 2 : 0 queries executed, 2 expected
E   Captured queries were:
________________ TestInstanceView.test_put_to_deleted_instance _________________
tests/test_generics.py:280: in test_put_to_deleted_instance
    self.objects.get(id=1).delete()
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
___________ TestOverriddenGetObject.test_overridden_get_object_view ____________
tests/test_generics.py:376: in test_overridden_get_object_view
    response = self.view(request, pk=1).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:286: in get
    return self.retrieve(request, *args, **kwargs)
rest_framework/mixins.py:54: in retrieve
    instance = self.get_object()
tests/test_generics.py:366: in get_object
    return get_object_or_404(BasicModel.objects.all(), id=pk)
../django/django/shortcuts.py:86: in get_object_or_404
    return queryset.get(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_ TestCreateModelWithAutoNowAddField.test_create_model_with_auto_now_add_field _
tests/test_generics.py:407: in test_create_model_with_auto_now_add_field
    response = self.view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:246: in post
    return self.create(request, *args, **kwargs)
rest_framework/mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_ TestFilterBackendAppliedToViews.test_get_instance_view_filters_out_name_with_filter_backend _
tests/test_generics.py:525: in test_get_instance_view_filters_out_name_with_filter_backend
    assert response.data == {
E   AssertionError: assert {'detail': Er...='not_found')} == {'detail': Er...='not_found')}
E
E     Differing items:
E     {'detail': ErrorDetail(string='Not found.', code='not_found')} != {'detail': ErrorDetail(string='No BasicModel matches the given query.', code='not_found')}
E     Use -v to get more diff
_ TestFilterBackendAppliedToViews.test_get_instance_view_will_return_single_object_when_filter_does_not_exclude_it _
tests/test_generics.py:539: in test_get_instance_view_will_return_single_object_when_filter_does_not_exclude_it
    assert response.status_code == status.HTTP_200_OK
E   assert 404 == 200
E    +  where 404 = <Response status_code=404, "application/json">.status_code
E    +  and   200 = status.HTTP_200_OK
_ TestFilterBackendAppliedToViews.test_get_root_view_filters_by_name_with_filter_backend _
tests/test_generics.py:502: in test_get_root_view_filters_by_name_with_filter_backend
    response = root_view(request).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:243: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______________ TestLazyHyperlinkNames.test_lazy_hyperlink_names _______________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'example-detail' with keyword arguments '{'pk': ObjectId('67e4684998c4c549af14caeb')}' not found. 1 pattern(s) tried: ['example/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_lazy_hyperlinks.py:45: in test_lazy_hyperlink_names
    JSONRenderer().render(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "example-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
__________ TestRelationalFieldDisplayValue.test_custom_display_value ___________
tests/test_model_serializer.py:778: in test_custom_display_value
    self.assertEqual(serializer.fields['color'].choices, expected)
E   AssertionError: {ObjectId('67e4684c98c4c549af151c93'): 'My[120 chars]lor'} != {1: 'My Red Color', 2: 'My Yellow Color', [15 chars]lor'}
E   + {1: 'My Red Color', 2: 'My Yellow Color', 3: 'My Green Color'}
E   - {ObjectId('67e4684c98c4c549af151c93'): 'My Red Color',
E   -  ObjectId('67e4684c98c4c549af151c94'): 'My Yellow Color',
E   -  ObjectId('67e4684c98c4c549af151c95'): 'My Green Color'}
__________ TestRelationalFieldDisplayValue.test_default_display_value __________
tests/test_model_serializer.py:762: in test_default_display_value
    self.assertEqual(serializer.fields['color'].choices, expected)
E   AssertionError: {ObjectId('67e4684c98c4c549af151eb8'): 'Re[111 chars]lor'} != {1: 'Red Color', 2: 'Yellow Color', 3: 'Green Color'}
E   + {1: 'Red Color', 2: 'Yellow Color', 3: 'Green Color'}
E   - {ObjectId('67e4684c98c4c549af151eb8'): 'Red Color',
E   -  ObjectId('67e4684c98c4c549af151eb9'): 'Yellow Color',
E   -  ObjectId('67e4684c98c4c549af151eba'): 'Green Color'}
________________________ TestIntegration.test_pk_create ________________________
tests/test_model_serializer.py:862: in test_pk_create
    self.assertEqual(serializer.data, expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________________ TestIntegration.test_pk_retrieval _______________________
tests/test_model_serializer.py:814: in test_pk_retrieval
    self.assertEqual(serializer.data, expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________________________ TestIntegration.test_pk_update ________________________
tests/test_model_serializer.py:910: in test_pk_update
    self.assertEqual(serializer.data, expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________________ Issue7550TestCase.test_dotted_source _____________________
tests/test_model_serializer.py:1055: in test_dotted_source
    assert FooSerializer(foo_a).data == {
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________ Issue7550TestCase.test_dotted_source_with_default _______________
tests/test_model_serializer.py:1085: in test_dotted_source_with_default
    assert FooSerializer(foo).data == {
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___________ Issue3674Test.test_nonID_PK_foreignkey_model_serializer ____________
tests/test_model_serializer.py:1267: in test_nonID_PK_foreignkey_model_serializer
    self.assertEqual(parent_serializer.data, parent_expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____ TestCursorPaginationWithValueQueryset.test_use_with_ordering_filter ______
tests/test_pagination.py:627: in test_use_with_ordering_filter
    assert ordering == ('username',)
E   AssertionError: assert ('created',) == ('username',)
E
E     At index 0 diff: 'created' != 'username'
E     Use -v to get more diff
_ TestCursorPaginationWithValueQueryset.test_use_with_ordering_filter_without_ordering_default_value _
tests/test_pagination.py:649: in test_use_with_ordering_filter_without_ordering_default_value
    assert ordering == ('username',)
E   AssertionError: assert ('created',) == ('username',)
E
E     At index 0 diff: 'created' != 'username'
E     Use -v to get more diff
__ ModelPermissionsIntegrationTests.test_get_queryset_has_create_permissions ___
tests/test_permissions.py:139: in test_get_queryset_has_create_permissions
    response = get_queryset_list_view(request, pk=1)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:246: in post
    return self.create(request, *args, **kwargs)
rest_framework/mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ ModelPermissionsIntegrationTests.test_has_create_permissions _________
tests/test_permissions.py:100: in test_has_create_permissions
    response = root_view(request, pk=1)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:246: in post
    return self.create(request, *args, **kwargs)
rest_framework/mixins.py:20: in create
    headers = self.get_success_headers(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ ModelPermissionsIntegrationTests.test_has_delete_permissions _________
tests/test_permissions.py:151: in test_has_delete_permissions
    self.assertEqual(response.status_code, status.HTTP_204_NO_CONTENT)
E   AssertionError: 404 != 204
__________ ModelPermissionsIntegrationTests.test_has_put_permissions ___________
tests/test_permissions.py:146: in test_has_put_permissions
    self.assertEqual(response.status_code, status.HTTP_200_OK)
E   AssertionError: 404 != 200
_ ModelPermissionsIntegrationTests.test_ignore_model_permissions_with_authenticated_user _
tests/test_permissions.py:133: in test_ignore_model_permissions_with_authenticated_user
    response = ignored_get_queryset_list_view(request)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:243: in get
    return self.list(request, *args, **kwargs)
rest_framework/mixins.py:46: in list
    return Response(serializer.data)
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___________ ModelPermissionsIntegrationTests.test_options_permitted ____________
tests/test_permissions.py:186: in test_options_permitted
    self.assertIn('actions', response.data)
E   AssertionError: 'actions' not found in {'name': 'Instance', 'description': '', 'renders': ['application/json', 'text/html'], 'parses': ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data']}
___________ ModelPermissionsIntegrationTests.test_options_updateonly ___________
tests/test_permissions.py:221: in test_options_updateonly
    self.assertIn('actions', response.data)
E   AssertionError: 'actions' not found in {'name': 'Instance', 'description': '', 'renders': ['application/json', 'text/html'], 'parses': ['application/json', 'application/x-www-form-urlencoded', 'multipart/form-data']}
___________ CustomPermissionsTests.test_permission_denied_for_object ___________
tests/test_permissions.py:533: in test_permission_denied_for_object
    self.assertEqual(response.status_code, status.HTTP_403_FORBIDDEN)
E   AssertionError: 404 != 403
_ CustomPermissionsTests.test_permission_denied_for_object_with_custom_detail __
tests/test_permissions.py:540: in test_permission_denied_for_object_with_custom_detail
    self.assertEqual(response.status_code, status.HTTP_403_FORBIDDEN)
E   AssertionError: 404 != 403
__ TestPrefetchRelatedUpdates.test_can_update_without_queryset_on_class_view ___
tests/test_prefetch_related.py:68: in test_can_update_without_queryset_on_class_view
    response = UserUpdateWithoutQuerySet.as_view()(request, pk=self.user.pk)
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:233: in patch
    return self.partial_update(request, *args, **kwargs)
rest_framework/mixins.py:82: in partial_update
    return self.update(request, *args, **kwargs)
rest_framework/mixins.py:75: in update
    return Response(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_ TestPrefetchRelatedUpdates.test_prefetch_related_excluding_instance_from_original_queryset _
tests/test_prefetch_related.py:49: in test_prefetch_related_excluding_instance_from_original_queryset
    request = factory.put('/', {'username': 'exclude', 'groups': [groups_pk]}, format='json')
rest_framework/test.py:216: in put
    data, content_type = self._encode_data(data, format, content_type)
rest_framework/test.py:183: in _encode_data
    ret = renderer.render(data)
rest_framework/renderers.py:100: in render
    ret = json.dumps(
rest_framework/utils/json.py:25: in dumps
    return json.dumps(*args, **kwargs)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/__init__.py:238: in dumps
    **kw).encode(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:200: in encode
    chunks = self.iterencode(o, _one_shot=True)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:261: in iterencode
    return _iterencode(o, 0)
rest_framework/utils/encoders.py:67: in default
    return super().default(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:180: in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
E   TypeError: Object of type ObjectId is not JSON serializable
___________ TestPrefetchRelatedUpdates.test_prefetch_related_updates ___________
tests/test_prefetch_related.py:31: in test_prefetch_related_updates
    request = factory.put('/', {'username': 'new', 'groups': [groups_pk]}, format='json')
rest_framework/test.py:216: in put
    data, content_type = self._encode_data(data, format, content_type)
rest_framework/test.py:183: in _encode_data
    ret = renderer.render(data)
rest_framework/renderers.py:100: in render
    ret = json.dumps(
rest_framework/utils/json.py:25: in dumps
    return json.dumps(*args, **kwargs)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/__init__.py:238: in dumps
    **kw).encode(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:200: in encode
    chunks = self.iterencode(o, _one_shot=True)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:261: in iterencode
    return _iterencode(o, 0)
rest_framework/utils/encoders.py:67: in default
    return super().default(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:180: in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
E   TypeError: Object of type ObjectId is not JSON serializable
_____________ HyperlinkedManyToManyTests.test_many_to_many_create ______________
tests/test_relations_hyperlink.py:161: in test_many_to_many_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ManyToManySourceSerializer(context={'request': <WSGIRequest: GET '/'>}, data={'url': 'http://testserver/manytomanysour...elatedField(allow_empty=False, many=True, queryset=ManyToManyTarget.objects.all(), view_name='manytomanytarget-detail').is_valid
____________ HyperlinkedManyToManyTests.test_many_to_many_retrieve _____________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'manytomanysource-detail' with keyword arguments '{'pk': ObjectId('67e4685698c4c549af160ef5')}' not found. 1 pattern(s) tried: ['manytomanysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:103: in test_many_to_many_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "manytomanysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
____ HyperlinkedManyToManyTests.test_many_to_many_retrieve_prefetch_related ____
tests/test_relations_hyperlink.py:109: in test_many_to_many_retrieve_prefetch_related
    serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
../django/django/db/models/query.py:400: in __iter__
    self._fetch_all()
../django/django/db/models/query.py:1930: in _fetch_all
    self._prefetch_related_objects()
../django/django/db/models/query.py:1320: in _prefetch_related_objects
    prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)
../django/django/db/models/query.py:2380: in prefetch_related_objects
    obj_list, additional_lookups = prefetch_one_level(
../django/django/db/models/query.py:2581: in prefetch_one_level
    all_related_objects = list(rel_qs)
../django/django/db/models/query.py:400: in __iter__
    self._fetch_all()
../django/django/db/models/query.py:1928: in _fetch_all
    self._result_cache = list(self._iterable_class(self))
../django/django/db/models/query.py:91: in __iter__
    results = compiler.execute_sql(
../django-mongodb-backend/django_mongodb_backend/compiler.py:245: in execute_sql
    query = self.build_query(
../django-mongodb-backend/django_mongodb_backend/compiler.py:351: in build_query
    self.check_query()
../django-mongodb-backend/django_mongodb_backend/compiler.py:346: in check_query
    raise NotSupportedError("QuerySet.prefetch_related() is not supported on MongoDB.")
E   django.db.utils.NotSupportedError: QuerySet.prefetch_related() is not supported on MongoDB.
_____________ HyperlinkedManyToManyTests.test_many_to_many_update ______________
tests/test_relations_hyperlink.py:124: in test_many_to_many_update
    instance = ManyToManySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_____________ HyperlinkedManyToManyTests.test_relative_hyperlinks ______________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'manytomanysource-detail' with keyword arguments '{'pk': ObjectId('67e4685698c4c549af1615ac')}' not found. 1 pattern(s) tried: ['manytomanysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:92: in test_relative_hyperlinks
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "manytomanysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
_________ HyperlinkedManyToManyTests.test_reverse_many_to_many_create __________
tests/test_relations_hyperlink.py:180: in test_reverse_many_to_many_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ManyToManyTargetSerializer(context={'request': <WSGIRequest: GET '/'>}, data={'url': 'http://testserver/manytomanytarg...rces = HyperlinkedRelatedField(many=True, queryset=ManyToManySource.objects.all(), view_name='manytomanysource-detail').is_valid
________ HyperlinkedManyToManyTests.test_reverse_many_to_many_retrieve _________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'manytomanytarget-detail' with keyword arguments '{'pk': ObjectId('67e4685798c4c549af161a25')}' not found. 1 pattern(s) tried: ['manytomanytarget/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:120: in test_reverse_many_to_many_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "manytomanytarget-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
_________ HyperlinkedManyToManyTests.test_reverse_many_to_many_update __________
tests/test_relations_hyperlink.py:142: in test_reverse_many_to_many_update
    instance = ManyToManyTarget.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
______________ HyperlinkedForeignKeyTests.test_foreign_key_create ______________
tests/test_relations_hyperlink.py:284: in test_foreign_key_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ForeignKeySourceSerializer(context={'request': <WSGIRequest: GET '/'>}, data={'url': 'http://testserver/foreignkeysour...perlinkedRelatedField(help_text='Target', queryset=ForeignKeyTarget.objects.all(), view_name='foreignkeytarget-detail').is_valid
_____________ HyperlinkedForeignKeyTests.test_foreign_key_retrieve _____________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'foreignkeysource-detail' with keyword arguments '{'pk': ObjectId('67e4685798c4c549af1620d7')}' not found. 1 pattern(s) tried: ['foreignkeysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:217: in test_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "foreignkeysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
______________ HyperlinkedForeignKeyTests.test_foreign_key_update ______________
tests/test_relations_hyperlink.py:231: in test_foreign_key_update
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
______ HyperlinkedForeignKeyTests.test_foreign_key_update_incorrect_type _______
tests/test_relations_hyperlink.py:249: in test_foreign_key_update_incorrect_type
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_____ HyperlinkedForeignKeyTests.test_foreign_key_update_with_invalid_null _____
tests/test_relations_hyperlink.py:320: in test_foreign_key_update_with_invalid_null
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
__________ HyperlinkedForeignKeyTests.test_reverse_foreign_key_create __________
tests/test_relations_hyperlink.py:303: in test_reverse_foreign_key_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ForeignKeyTargetSerializer(context={'request': <WSGIRequest: GET '/'>}, data={'url': 'http://testserver/foreignkeytarg...rces = HyperlinkedRelatedField(many=True, queryset=ForeignKeySource.objects.all(), view_name='foreignkeysource-detail').is_valid
_________ HyperlinkedForeignKeyTests.test_reverse_foreign_key_retrieve _________
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'foreignkeytarget-detail' with keyword arguments '{'pk': ObjectId('67e4685898c4c549af162be3')}' not found. 1 pattern(s) tried: ['foreignkeytarget/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:227: in test_reverse_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "foreignkeytarget-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
__________ HyperlinkedForeignKeyTests.test_reverse_foreign_key_update __________
tests/test_relations_hyperlink.py:256: in test_reverse_foreign_key_update
    instance = ForeignKeyTarget.objects.get(pk=2)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“2” is not a valid Object Id.']
_ HyperlinkedNullableForeignKeyTests.test_foreign_key_create_with_valid_emptystring _
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'nullableforeignkeysource-detail' with keyword arguments '{'pk': ObjectId('67e4685898c4c549af163053')}' not found. 1 pattern(s) tried: ['nullableforeignkeysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:376: in test_foreign_key_create_with_valid_emptystring
    assert serializer.data == expected_data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "nullableforeignkeysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
__ HyperlinkedNullableForeignKeyTests.test_foreign_key_create_with_valid_null __
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'nullableforeignkeysource-detail' with keyword arguments '{'pk': ObjectId('67e4685898c4c549af163289')}' not found. 1 pattern(s) tried: ['nullableforeignkeysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:352: in test_foreign_key_create_with_valid_null
    assert serializer.data == data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "nullableforeignkeysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
____ HyperlinkedNullableForeignKeyTests.test_foreign_key_retrieve_with_null ____
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'nullableforeignkeysource-detail' with keyword arguments '{'pk': ObjectId('67e4685898c4c549af1634bc')}' not found. 1 pattern(s) tried: ['nullableforeignkeysource/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:345: in test_foreign_key_retrieve_with_null
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "nullableforeignkeysource-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
_ HyperlinkedNullableForeignKeyTests.test_foreign_key_update_with_valid_emptystring _
tests/test_relations_hyperlink.py:415: in test_foreign_key_update_with_valid_emptystring
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
__ HyperlinkedNullableForeignKeyTests.test_foreign_key_update_with_valid_null __
tests/test_relations_hyperlink.py:392: in test_foreign_key_update_with_valid_null
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_ HyperlinkedNullableOneToOneTests.test_reverse_foreign_key_retrieve_with_null _
rest_framework/relations.py:396: in to_representation
    url = self.get_url(value, self.view_name, request, format)
rest_framework/relations.py:334: in get_url
    return self.reverse(view_name, kwargs=kwargs, request=request, format=format)
rest_framework/reverse.py:47: in reverse
    url = _reverse(viewname, args, kwargs, request, format, **extra)
rest_framework/reverse.py:60: in _reverse
    url = django_reverse(viewname, args=args, kwargs=kwargs, **extra)
../django/django/urls/base.py:88: in reverse
    return resolver._reverse_with_prefix(view, prefix, *args, **kwargs)
../django/django/urls/resolvers.py:831: in _reverse_with_prefix
    raise NoReverseMatch(msg)
E   django.urls.exceptions.NoReverseMatch: Reverse for 'onetoonetarget-detail' with keyword arguments '{'pk': ObjectId('67e4685998c4c549af163b5a')}' not found. 1 pattern(s) tried: ['onetoonetarget/(?P<pk>[0-9]+)/\\Z']

During handling of the above exception, another exception occurred:
tests/test_relations_hyperlink.py:449: in test_reverse_foreign_key_retrieve_with_null
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/relations.py:411: in to_representation
    raise ImproperlyConfigured(msg % self.view_name)
E   django.core.exceptions.ImproperlyConfigured: Could not resolve URL for hyperlinked relationship using view name "onetoonetarget-detail". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
__________________ PKManyToManyTests.test_many_to_many_create __________________
tests/test_relations_pk.py:176: in test_many_to_many_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ManyToManySourceSerializer(data={'id': 4, 'name': 'source-4', 'targets': [1, 3]}):\n    id = IntegerField(label='ID', r...length=100)\n    targets = PrimaryKeyRelatedField(allow_empty=False, many=True, queryset=ManyToManyTarget.objects.all()).is_valid
_________________ PKManyToManyTests.test_many_to_many_retrieve _________________
tests/test_relations_pk.py:118: in test_many_to_many_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________ PKManyToManyTests.test_many_to_many_retrieve_prefetch_related _________
tests/test_relations_pk.py:124: in test_many_to_many_retrieve_prefetch_related
    serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
../django/django/db/models/query.py:400: in __iter__
    self._fetch_all()
../django/django/db/models/query.py:1930: in _fetch_all
    self._prefetch_related_objects()
../django/django/db/models/query.py:1320: in _prefetch_related_objects
    prefetch_related_objects(self._result_cache, *self._prefetch_related_lookups)
../django/django/db/models/query.py:2380: in prefetch_related_objects
    obj_list, additional_lookups = prefetch_one_level(
../django/django/db/models/query.py:2581: in prefetch_one_level
    all_related_objects = list(rel_qs)
../django/django/db/models/query.py:400: in __iter__
    self._fetch_all()
../django/django/db/models/query.py:1928: in _fetch_all
    self._result_cache = list(self._iterable_class(self))
../django/django/db/models/query.py:91: in __iter__
    results = compiler.execute_sql(
../django-mongodb-backend/django_mongodb_backend/compiler.py:245: in execute_sql
    query = self.build_query(
../django-mongodb-backend/django_mongodb_backend/compiler.py:351: in build_query
    self.check_query()
../django-mongodb-backend/django_mongodb_backend/compiler.py:346: in check_query
    raise NotSupportedError("QuerySet.prefetch_related() is not supported on MongoDB.")
E   django.db.utils.NotSupportedError: QuerySet.prefetch_related() is not supported on MongoDB.
__________________ PKManyToManyTests.test_many_to_many_update __________________
tests/test_relations_pk.py:139: in test_many_to_many_update
    instance = ManyToManySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
______________ PKManyToManyTests.test_reverse_many_to_many_create ______________
tests/test_relations_pk.py:205: in test_reverse_many_to_many_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ManyToManyTargetSerializer(data={'id': 4, 'name': 'target-4', 'sources': [1, 3]}):\n    id = IntegerField(label='ID', r...me = CharField(max_length=100)\n    sources = PrimaryKeyRelatedField(many=True, queryset=ManyToManySource.objects.all()).is_valid
_____________ PKManyToManyTests.test_reverse_many_to_many_retrieve _____________
tests/test_relations_pk.py:135: in test_reverse_many_to_many_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________ PKManyToManyTests.test_reverse_many_to_many_update ______________
tests/test_relations_pk.py:157: in test_reverse_many_to_many_update
    instance = ManyToManyTarget.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
__________________ PKForeignKeyTests.test_foreign_key_create ___________________
tests/test_relations_pk.py:314: in test_foreign_key_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ForeignKeySourceSerializer(data={'id': 4, 'name': 'source-4', 'target': 2}):\n    id = IntegerField(label='ID', read_on...rField(max_length=100)\n    target = PrimaryKeyRelatedField(help_text='Target', queryset=ForeignKeyTarget.objects.all()).is_valid
_________________ PKForeignKeyTests.test_foreign_key_retrieve __________________
tests/test_relations_pk.py:241: in test_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
__________________ PKForeignKeyTests.test_foreign_key_update ___________________
tests/test_relations_pk.py:261: in test_foreign_key_update
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
___________ PKForeignKeyTests.test_foreign_key_update_incorrect_type ___________
tests/test_relations_pk.py:279: in test_foreign_key_update_incorrect_type
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_________ PKForeignKeyTests.test_foreign_key_update_with_invalid_null __________
tests/test_relations_pk.py:350: in test_foreign_key_update_with_invalid_null
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
______________ PKForeignKeyTests.test_reverse_foreign_key_create _______________
tests/test_relations_pk.py:333: in test_reverse_foreign_key_create
    assert serializer.is_valid()
E   AssertionError: assert False
E    +  where False = is_valid()
E    +    where is_valid = ForeignKeyTargetSerializer(data={'id': 3, 'name': 'target-3', 'sources': [1, 3]}):\n    id = IntegerField(label='ID', r...me = CharField(max_length=100)\n    sources = PrimaryKeyRelatedField(many=True, queryset=ForeignKeySource.objects.all()).is_valid
_____________ PKForeignKeyTests.test_reverse_foreign_key_retrieve ______________
tests/test_relations_pk.py:251: in test_reverse_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____ PKForeignKeyTests.test_reverse_foreign_key_retrieve_prefetch_related _____
tests/test_relations_pk.py:257: in test_reverse_foreign_key_retrieve_prefetch_related
    serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________ PKForeignKeyTests.test_reverse_foreign_key_update _______________
tests/test_relations_pk.py:286: in test_reverse_foreign_key_update
    instance = ForeignKeyTarget.objects.get(pk=2)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“2” is not a valid Object Id.']
_____________ PKRelationTests.test_relation_field_callable_source ______________
tests/test_relations_pk.py:426: in test_relation_field_callable_source
    self.assertEqual(serializer.data, expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________ PKRelationTests.test_relation_field_property_source ______________
tests/test_relations_pk.py:436: in test_relation_field_property_source
    self.assertEqual(serializer.data, expected)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___ PKNullableForeignKeyTests.test_foreign_key_create_with_valid_emptystring ___
tests/test_relations_pk.py:488: in test_foreign_key_create_with_valid_emptystring
    assert serializer.data == expected_data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______ PKNullableForeignKeyTests.test_foreign_key_create_with_valid_null _______
tests/test_relations_pk.py:464: in test_foreign_key_create_with_valid_null
    assert serializer.data == data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________ PKNullableForeignKeyTests.test_foreign_key_retrieve_with_null _________
tests/test_relations_pk.py:457: in test_foreign_key_retrieve_with_null
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___ PKNullableForeignKeyTests.test_foreign_key_update_with_valid_emptystring ___
tests/test_relations_pk.py:527: in test_foreign_key_update_with_valid_emptystring
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
______ PKNullableForeignKeyTests.test_foreign_key_update_with_valid_null _______
tests/test_relations_pk.py:504: in test_foreign_key_update_with_valid_null
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_____ PKNullableOneToOneTests.test_reverse_foreign_key_retrieve_with_null ______
tests/test_relations_pk.py:571: in test_reverse_foreign_key_retrieve_with_null
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
___ OneToOnePrimaryKeyTests.test_one_to_one_when_primary_key_does_not_exist ____
tests/test_relations_pk.py:614: in test_one_to_one_when_primary_key_does_not_exist
    target_pk = self.target.pk + self.alt_target.pk
E   TypeError: unsupported operand type(s) for +: 'ObjectId' and 'ObjectId'
_________________ SlugForeignKeyTests.test_foreign_key_create __________________
tests/test_relations_slug.py:145: in test_foreign_key_create
    assert serializer.data == data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
________________ SlugForeignKeyTests.test_foreign_key_retrieve _________________
tests/test_relations_slug.py:64: in test_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________ SlugForeignKeyTests.test_foreign_key_retrieve_select_related _________
tests/test_relations_slug.py:70: in test_foreign_key_retrieve_select_related
    serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_________________ SlugForeignKeyTests.test_foreign_key_update __________________
tests/test_relations_slug.py:89: in test_foreign_key_update
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
__________ SlugForeignKeyTests.test_foreign_key_update_incorrect_type __________
tests/test_relations_slug.py:107: in test_foreign_key_update_incorrect_type
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
________ SlugForeignKeyTests.test_foreign_key_update_with_invalid_null _________
tests/test_relations_slug.py:179: in test_foreign_key_update_with_invalid_null
    instance = ForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_____________ SlugForeignKeyTests.test_reverse_foreign_key_create ______________
tests/test_relations_slug.py:164: in test_reverse_foreign_key_create
    assert serializer.data == data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
____________ SlugForeignKeyTests.test_reverse_foreign_key_retrieve _____________
tests/test_relations_slug.py:79: in test_reverse_foreign_key_retrieve
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
____ SlugForeignKeyTests.test_reverse_foreign_key_retrieve_prefetch_related ____
tests/test_relations_slug.py:85: in test_reverse_foreign_key_retrieve_prefetch_related
    serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____________ SlugForeignKeyTests.test_reverse_foreign_key_update ______________
tests/test_relations_slug.py:114: in test_reverse_foreign_key_update
    instance = ForeignKeyTarget.objects.get(pk=2)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“2” is not a valid Object Id.']
__ SlugNullableForeignKeyTests.test_foreign_key_create_with_valid_emptystring __
tests/test_relations_slug.py:234: in test_foreign_key_create_with_valid_emptystring
    assert serializer.data == expected_data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_____ SlugNullableForeignKeyTests.test_foreign_key_create_with_valid_null ______
tests/test_relations_slug.py:210: in test_foreign_key_create_with_valid_null
    assert serializer.data == data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______ SlugNullableForeignKeyTests.test_foreign_key_retrieve_with_null ________
tests/test_relations_slug.py:203: in test_foreign_key_retrieve_with_null
    assert serializer.data == expected
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
__ SlugNullableForeignKeyTests.test_foreign_key_update_with_valid_emptystring __
tests/test_relations_slug.py:273: in test_foreign_key_update_with_valid_emptystring
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
_____ SlugNullableForeignKeyTests.test_foreign_key_update_with_valid_null ______
tests/test_relations_slug.py:250: in test_foreign_key_update_with_valid_null
    instance = NullableForeignKeySource.objects.get(pk=1)
../django/django/db/models/manager.py:87: in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
../django/django/db/models/query.py:635: in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
../django/django/db/models/query.py:1476: in filter
    return self._filter_or_exclude(False, args, kwargs)
../django/django/db/models/query.py:1494: in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
../django/django/db/models/query.py:1501: in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
../django/django/db/models/sql/query.py:1609: in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
../django/django/db/models/sql/query.py:1641: in _add_q
    child_clause, needed_inner = self.build_filter(
../django/django/db/models/sql/query.py:1555: in build_filter
    condition = self.build_lookup(lookups, col, value)
../django/django/db/models/sql/query.py:1385: in build_lookup
    lookup = lookup_class(lhs, rhs)
../django/django/db/models/lookups.py:30: in __init__
    self.rhs = self.get_prep_lookup()
../django/django/db/models/lookups.py:369: in get_prep_lookup
    return super().get_prep_lookup()
../django/django/db/models/lookups.py:88: in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
../django-mongodb-backend/django_mongodb_backend/fields/auto.py:25: in get_prep_value
    return self.to_python(value)
../django-mongodb-backend/django_mongodb_backend/fields/objectid.py:31: in to_python
    raise exceptions.ValidationError(
E   django.core.exceptions.ValidationError: ['“1” is not a valid Object Id.']
________________ JSONRendererTests.test_render_queryset_values _________________
tests/test_renderers.py:304: in test_render_queryset_values
    ret = JSONRenderer().render(qs)
rest_framework/renderers.py:100: in render
    ret = json.dumps(
rest_framework/utils/json.py:25: in dumps
    return json.dumps(*args, **kwargs)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/__init__.py:238: in dumps
    **kw).encode(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:200: in encode
    chunks = self.iterencode(o, _one_shot=True)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:261: in iterencode
    return _iterencode(o, 0)
rest_framework/utils/encoders.py:67: in default
    return super().default(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:180: in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
E   TypeError: Object of type ObjectId is not JSON serializable
______________ JSONRendererTests.test_render_queryset_values_list ______________
tests/test_renderers.py:311: in test_render_queryset_values_list
    ret = JSONRenderer().render(qs)
rest_framework/renderers.py:100: in render
    ret = json.dumps(
rest_framework/utils/json.py:25: in dumps
    return json.dumps(*args, **kwargs)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/__init__.py:238: in dumps
    **kw).encode(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:200: in encode
    chunks = self.iterencode(o, _one_shot=True)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:261: in iterencode
    return _iterencode(o, 0)
rest_framework/utils/encoders.py:67: in default
    return super().default(obj)
../../../../.pyenv/versions/3.13.2/lib/python3.13/json/encoder.py:180: in default
    raise TypeError(f'Object of type {o.__class__.__name__} '
E   TypeError: Object of type ObjectId is not JSON serializable
____________________ TestToRepresentationManagerCheck.test _____________________
tests/test_serializer_lists.py:783: in test
    assert serializer.data
rest_framework/serializers.py:797: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:716: in to_representation
    self.child.to_representation(item) for item in iterable
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______ TestMaxValueValidatorValidation.test_max_value_validation_success _______
tests/test_validation.py:153: in test_max_value_validation_success
    response = view(request, pk=obj.pk).render()
../django/django/views/decorators/csrf.py:65: in _view_wrapper
    return view_func(request, *args, **kwargs)
../django/django/views/generic/base.py:104: in view
    return self.dispatch(request, *args, **kwargs)
rest_framework/views.py:515: in dispatch
    response = self.handle_exception(exc)
rest_framework/views.py:475: in handle_exception
    self.raise_uncaught_exception(exc)
rest_framework/views.py:486: in raise_uncaught_exception
    raise exc
rest_framework/views.py:512: in dispatch
    response = handler(request, *args, **kwargs)
rest_framework/generics.py:292: in patch
    return self.partial_update(request, *args, **kwargs)
rest_framework/mixins.py:82: in partial_update
    return self.update(request, *args, **kwargs)
rest_framework/mixins.py:75: in update
    return Response(serializer.data)
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
______________ TestUniquenessValidation.test_doesnt_pollute_model ______________
tests/test_validators.py:122: in test_doesnt_pollute_model
    serializer.data
rest_framework/serializers.py:573: in data
    ret = super().data
rest_framework/serializers.py:251: in data
    self._data = self.to_representation(self.instance)
rest_framework/serializers.py:540: in to_representation
    ret[field.field_name] = field.to_representation(attribute)
rest_framework/fields.py:921: in to_representation
    return int(value)
E   TypeError: int() argument must be a string, a bytes-like object or a real number, not 'ObjectId'
_______ TestUniqueConstraintValidation.test_single_field_uniq_validators _______
tests/test_validators.py:678: in test_single_field_uniq_validators
    assert ids_in_qs == {frozenset([1]), frozenset([3])}
E   AssertionError: assert {frozenset({O...9af1988cf')})} == {frozenset({3...rozenset({1})}
E
E     Extra items in the left set:
E     frozenset({ObjectId('67e4687998c4c549af1988d1')})
E     frozenset({ObjectId('67e4687998c4c549af1988cf')})
E     Extra items in the right set:
E     frozenset({3})
E     frozenset({1})
E     Use -v to get more diff
_________ TestUniquenessForDateValidation.test_is_not_unique_for_date __________
tests/test_validators.py:726: in test_is_not_unique_for_date
    assert not serializer.is_valid()
E   AssertionError: assert not True
E    +  where True = is_valid()
E    +    where is_valid = UniqueForDateSerializer(data={'slug': 'existing', 'published': '2000-01-01'}):\n    id = IntegerField(label='ID', read_...alidators = [<UniqueForDateValidator(queryset=UniqueForDateModel.objects.all(), field='slug', date_field='published')>].is_valid
________________ UniqueForMonthTests.test_not_unique_for_month _________________
tests/test_validators.py:781: in test_not_unique_for_month
    assert not serializer.is_valid()
E   AssertionError: assert not True
E    +  where True = is_valid()
E    +    where is_valid = UniqueForMonthSerializer(data={'slug': 'existing', 'published': '2017-01-01'}):\n    id = IntegerField(label='ID', read...idators = [<UniqueForMonthValidator(queryset=UniqueForMonthModel.objects.all(), field='slug', date_field='published')>].is_valid
_________________ UniqueForYearTests.test_not_unique_for_year __________________
tests/test_validators.py:820: in test_not_unique_for_year
    assert not serializer.is_valid()
E   AssertionError: assert not True
E    +  where True = is_valid()
E    +    where is_valid = UniqueForYearSerializer(data={'slug': 'existing', 'published': '2017-01-01'}):\n    id = IntegerField(label='ID', read_...alidators = [<UniqueForYearValidator(queryset=UniqueForYearModel.objects.all(), field='slug', date_field='published')>].is_valid
___ TestPytzNaiveDayLightSavingTimeTimeZoneDateTimeField.test_invalid_inputs ___
tests/test_fields.py:682: in test_invalid_inputs
    self.field.run_validation(input_value)
rest_framework/fields.py:538: in run_validation
    value = self.to_internal_value(data)
rest_framework/fields.py:1190: in to_internal_value
    return self.enforce_timezone(parsed)
rest_framework/fields.py:1168: in enforce_timezone
    raise e
rest_framework/fields.py:1162: in enforce_timezone
    if not valid_datetime(dt):
rest_framework/utils/timezone.py:23: in valid_datetime
    if isinstance(dt.tzinfo, tzinfo) and not datetime_ambiguous(dt):
rest_framework/utils/timezone.py:16: in datetime_ambiguous
    return datetime_exists(dt) and (
rest_framework/utils/timezone.py:9: in datetime_exists
    return dt.astimezone(timezone.utc) == dt
E   NotImplementedError: a tzinfo subclass must implement utcoffset()
______________ TestCursorPagination.test_use_with_ordering_filter ______________
tests/test_pagination.py:627: in test_use_with_ordering_filter
    assert ordering == ('username',)
E   AssertionError: assert ('created',) == ('username',)
E
E     At index 0 diff: 'created' != 'username'
E     Use -v to get more diff
_ TestCursorPagination.test_use_with_ordering_filter_without_ordering_default_value _
tests/test_pagination.py:649: in test_use_with_ordering_filter_without_ordering_default_value
    assert ordering == ('username',)
E   AssertionError: assert ('created',) == ('username',)
E
E     At index 0 diff: 'created' != 'username'
E     Use -v to get more diff
=============================== warnings summary ===============================
rest_framework/fields.py:990
  /Users/alex.clark/Developer/django-mongodb-cli/src/django-rest-framework/rest_framework/fields.py:990: UserWarning: max_value should be an integer or Decimal instance.
    warnings.warn("max_value should be an integer or Decimal instance.")

rest_framework/fields.py:992
  /Users/alex.clark/Developer/django-mongodb-cli/src/django-rest-framework/rest_framework/fields.py:992: UserWarning: min_value should be an integer or Decimal instance.
    warnings.warn("min_value should be an integer or Decimal instance.")

tests/test_authtoken.py::AuthTokenTests::test_authtoken_can_be_imported_when_not_included_in_installed_apps
  /Users/alex.clark/Developer/django-mongodb-cli/src/django/django/db/models/base.py:366: RuntimeWarning: Model 'authtoken.token' was already registered. Reloading models is not advised as it can lead to inconsistencies, most notably with related models.
    new_class._meta.apps.register_model(new_class._meta.app_label, new_class)

tests/test_authtoken.py::AuthTokenTests::test_authtoken_can_be_imported_when_not_included_in_installed_apps
  /Users/alex.clark/Developer/django-mongodb-cli/src/django/django/db/models/base.py:366: RuntimeWarning: Model 'authtoken.tokenproxy' was already registered. Reloading models is not advised as it can lead to inconsistencies, most notably with related models.
    new_class._meta.apps.register_model(new_class._meta.app_label, new_class)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
SKIPPED [1] tests/schemas/test_coreapi.py:163: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:212: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:422: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:475: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:528: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:582: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:649: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:692: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:738: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:768: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:829: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1011: coreschema is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:904: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:868: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:964: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:950: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:925: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1135: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1117: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1144: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1265: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1242: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1201: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1297: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1309: coreapi is not installed
SKIPPED [1] tests/schemas/test_get_schema_view.py:15: coreapi is not installed
SKIPPED [1] tests/schemas/test_managementcommand.py:71: uritemplate is not installed
SKIPPED [1] tests/schemas/test_managementcommand.py:45: uritemplate is not installed
SKIPPED [1] tests/schemas/test_managementcommand.py:93: coreapi is required.
SKIPPED [1] tests/schemas/test_managementcommand.py:117: coreapi is required.
SKIPPED [1] tests/schemas/test_managementcommand.py:147: coreapi is required.
SKIPPED [1] tests/schemas/test_managementcommand.py:52: uritemplate is not installed
SKIPPED [1] tests/schemas/test_managementcommand.py:63: uritemplate is not installed
SKIPPED [1] tests/schemas/test_managementcommand.py:78: uritemplate is not installed
SKIPPED [1] tests/schemas/test_openapi.py:1121: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:563: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:836: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:936: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:292: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:319: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:267: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:456: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:641: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:654: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:770: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:755: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:740: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:818: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:800: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:785: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:954: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1099: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1088: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:504: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:586: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:201: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:168: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:609: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:921: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:240: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:345: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:372: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:406: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:682: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1005: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:971: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:659: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:989: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1021: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1293: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1320: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1356: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1335: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1176: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1143: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1146: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1162: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1189: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1249: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1263: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1227: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1202: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1215: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1240: uritemplate not installed.
SKIPPED [1] tests/schemas/test_openapi.py:1276: uritemplate not installed.
SKIPPED [1] tests/test_api_client.py:194: coreapi not installed
SKIPPED [1] tests/test_api_client.py:248: coreapi not installed
SKIPPED [1] tests/test_api_client.py:466: coreapi not installed
SKIPPED [1] tests/test_api_client.py:235: coreapi not installed
SKIPPED [1] tests/test_api_client.py:272: coreapi not installed
SKIPPED [1] tests/test_api_client.py:343: coreapi not installed
SKIPPED [1] tests/test_api_client.py:309: coreapi not installed
SKIPPED [1] tests/test_api_client.py:293: coreapi not installed
SKIPPED [1] tests/test_api_client.py:324: coreapi not installed
SKIPPED [1] tests/test_api_client.py:261: coreapi not installed
SKIPPED [1] tests/test_api_client.py:208: coreapi not installed
SKIPPED [1] tests/test_api_client.py:225: coreapi not installed
SKIPPED [1] tests/test_api_client.py:404: coreapi not installed
SKIPPED [1] tests/test_api_client.py:439: coreapi not installed
SKIPPED [1] tests/test_api_client.py:423: coreapi not installed
SKIPPED [1] tests/test_api_client.py:218: coreapi not installed
SKIPPED [1] tests/test_api_client.py:457: coreapi not installed
SKIPPED [1] tests/test_api_client.py:363: coreapi not installed
SKIPPED [1] tests/test_api_client.py:389: coreapi not installed
SKIPPED [1] tests/test_api_client.py:376: coreapi not installed
SKIPPED [1] tests/test_atomic_requests.py:63: 'atomic' requires transactions and savepoints.
SKIPPED [1] tests/test_atomic_requests.py:85: 'atomic' requires transactions and savepoints.
SKIPPED [1] tests/test_atomic_requests.py:115: 'atomic' requires transactions and savepoints.
SKIPPED [1] tests/test_atomic_requests.py:149: 'atomic' requires transactions and savepoints.
SKIPPED [1] tests/test_description.py:142: Markdown is not installed
SKIPPED [1] tests/test_encoders.py:81: coreapi is not installed
SKIPPED [1] tests/test_filters.py:52: coreschema is not installed
SKIPPED [1] tests/test_model_serializer.py:462: has models.JSONField
SKIPPED [1] tests/test_permissions.py:380: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:427: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:439: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:417: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:391: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:385: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:445: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:422: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:400: django-guardian not installed
SKIPPED [1] tests/test_permissions.py:408: django-guardian not installed
SKIPPED [1] tests/test_renderers.py:879: coreapi is not installed
SKIPPED [1] tests/test_renderers.py:905: coreapi is not installed
SKIPPED [1] tests/test_renderers.py:919: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:362: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:403: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:452: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:511: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:560: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:329: coreapi is not installed
SKIPPED [1] tests/test_templatetags.py:343: coreapi is not installed
SKIPPED [1] tests/test_atomic_requests.py:180: 'atomic' requires transactions and savepoints.
SKIPPED [1] tests/schemas/test_coreapi.py:1436: coreapi is not installed
SKIPPED [1] tests/schemas/test_coreapi.py:1446: coreapi is not installed
FAILED tests/browsable_api/test_browsable_api.py::AnonymousUserTests::test_get_raises_typeerror_when_anonymous_user_in_queryset_filter
FAILED tests/browsable_api/test_form_rendering.py::TestManyPostView::test_post_many_post_view
FAILED tests/generic_relations/test_generic_relations.py::TestGenericRelations::test_generic_fk
FAILED tests/generic_relations/test_generic_relations.py::TestGenericRelations::test_generic_relation
FAILED tests/test_filters.py::SearchFilterTests::test_exact_search - TypeErro...
FAILED tests/test_filters.py::SearchFilterTests::test_regexp_search - TypeErr...
FAILED tests/test_filters.py::SearchFilterTests::test_search - TypeError: int...
FAILED tests/test_filters.py::SearchFilterTests::test_search_field_with_additional_transforms
FAILED tests/test_filters.py::SearchFilterTests::test_search_field_with_custom_lookup
FAILED tests/test_filters.py::SearchFilterTests::test_search_field_with_escapes
FAILED tests/test_filters.py::SearchFilterTests::test_search_field_with_quotes
FAILED tests/test_filters.py::SearchFilterTests::test_search_returns_same_queryset_if_no_search_fields_or_terms_provided
FAILED tests/test_filters.py::SearchFilterTests::test_search_with_filter_subclass
FAILED tests/test_filters.py::SearchFilterTests::test_search_with_nonstandard_search_param
FAILED tests/test_filters.py::SearchFilterTests::test_startswith_search - Typ...
FAILED tests/test_filters.py::SearchFilterM2MTests::test_m2m_search - django....
FAILED tests/test_filters.py::SearchFilterM2MTests::test_must_call_distinct
FAILED tests/test_filters.py::SearchFilterToManyTests::test_multiple_filter_conditions
FAILED tests/test_filters.py::SearchFilterAnnotatedFieldTests::test_search_in_annotated_field
FAILED tests/test_filters.py::OrderingFilterTests::test_default_ordering - Ty...
FAILED tests/test_filters.py::OrderingFilterTests::test_default_ordering_using_string
FAILED tests/test_filters.py::OrderingFilterTests::test_get_template_context
FAILED tests/test_filters.py::OrderingFilterTests::test_incorrectfield_ordering
FAILED tests/test_filters.py::OrderingFilterTests::test_incorrecturl_extrahyphens_ordering
FAILED tests/test_filters.py::OrderingFilterTests::test_ordering - TypeError:...
FAILED tests/test_filters.py::OrderingFilterTests::test_ordering_by_aggregate_field
FAILED tests/test_filters.py::OrderingFilterTests::test_ordering_with_nonstandard_ordering_param
FAILED tests/test_filters.py::OrderingFilterTests::test_ordering_with_overridden_get_serializer_class
FAILED tests/test_filters.py::OrderingFilterTests::test_ordering_without_ordering_fields
FAILED tests/test_filters.py::OrderingFilterTests::test_reverse_ordering - Ty...
FAILED tests/test_filters.py::SensitiveOrderingFilterTests::test_cannot_order_by_non_serializer_fields
FAILED tests/test_filters.py::SensitiveOrderingFilterTests::test_order_by_serializer_fields
FAILED tests/test_generics.py::TestRootView::test_get_root_view - TypeError: ...
FAILED tests/test_generics.py::TestRootView::test_head_root_view - TypeError:...
FAILED tests/test_generics.py::TestRootView::test_post_cannot_set_id - TypeEr...
FAILED tests/test_generics.py::TestRootView::test_post_root_view - TypeError:...
FAILED tests/test_generics.py::TestInstanceView::test_delete_instance_view - ...
FAILED tests/test_generics.py::TestInstanceView::test_get_instance_view - Ass...
FAILED tests/test_generics.py::TestInstanceView::test_patch_cannot_create_an_object
FAILED tests/test_generics.py::TestInstanceView::test_patch_instance_view - A...
FAILED tests/test_generics.py::TestInstanceView::test_put_cannot_set_id - Ass...
FAILED tests/test_generics.py::TestInstanceView::test_put_error_instance_view
FAILED tests/test_generics.py::TestInstanceView::test_put_instance_view - Ass...
FAILED tests/test_generics.py::TestInstanceView::test_put_to_deleted_instance
FAILED tests/test_generics.py::TestOverriddenGetObject::test_overridden_get_object_view
FAILED tests/test_generics.py::TestCreateModelWithAutoNowAddField::test_create_model_with_auto_now_add_field
FAILED tests/test_generics.py::TestFilterBackendAppliedToViews::test_get_instance_view_filters_out_name_with_filter_backend
FAILED tests/test_generics.py::TestFilterBackendAppliedToViews::test_get_instance_view_will_return_single_object_when_filter_does_not_exclude_it
FAILED tests/test_generics.py::TestFilterBackendAppliedToViews::test_get_root_view_filters_by_name_with_filter_backend
FAILED tests/test_lazy_hyperlinks.py::TestLazyHyperlinkNames::test_lazy_hyperlink_names
FAILED tests/test_model_serializer.py::TestRelationalFieldDisplayValue::test_custom_display_value
FAILED tests/test_model_serializer.py::TestRelationalFieldDisplayValue::test_default_display_value
FAILED tests/test_model_serializer.py::TestIntegration::test_pk_create - Type...
FAILED tests/test_model_serializer.py::TestIntegration::test_pk_retrieval - T...
FAILED tests/test_model_serializer.py::TestIntegration::test_pk_update - Type...
FAILED tests/test_model_serializer.py::Issue7550TestCase::test_dotted_source
FAILED tests/test_model_serializer.py::Issue7550TestCase::test_dotted_source_with_default
FAILED tests/test_model_serializer.py::Issue3674Test::test_nonID_PK_foreignkey_model_serializer
FAILED tests/test_pagination.py::TestCursorPaginationWithValueQueryset::test_use_with_ordering_filter
FAILED tests/test_pagination.py::TestCursorPaginationWithValueQueryset::test_use_with_ordering_filter_without_ordering_default_value
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_get_queryset_has_create_permissions
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_has_create_permissions
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_has_delete_permissions
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_has_put_permissions
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_ignore_model_permissions_with_authenticated_user
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_options_permitted
FAILED tests/test_permissions.py::ModelPermissionsIntegrationTests::test_options_updateonly
FAILED tests/test_permissions.py::CustomPermissionsTests::test_permission_denied_for_object
FAILED tests/test_permissions.py::CustomPermissionsTests::test_permission_denied_for_object_with_custom_detail
FAILED tests/test_prefetch_related.py::TestPrefetchRelatedUpdates::test_can_update_without_queryset_on_class_view
FAILED tests/test_prefetch_related.py::TestPrefetchRelatedUpdates::test_prefetch_related_excluding_instance_from_original_queryset
FAILED tests/test_prefetch_related.py::TestPrefetchRelatedUpdates::test_prefetch_related_updates
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_many_to_many_create
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_many_to_many_retrieve
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_many_to_many_retrieve_prefetch_related
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_many_to_many_update
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_relative_hyperlinks
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_reverse_many_to_many_create
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_reverse_many_to_many_retrieve
FAILED tests/test_relations_hyperlink.py::HyperlinkedManyToManyTests::test_reverse_many_to_many_update
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_foreign_key_create
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_foreign_key_retrieve
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_foreign_key_update
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_foreign_key_update_incorrect_type
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_foreign_key_update_with_invalid_null
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_reverse_foreign_key_create
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_reverse_foreign_key_retrieve
FAILED tests/test_relations_hyperlink.py::HyperlinkedForeignKeyTests::test_reverse_foreign_key_update
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableForeignKeyTests::test_foreign_key_create_with_valid_emptystring
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableForeignKeyTests::test_foreign_key_create_with_valid_null
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableForeignKeyTests::test_foreign_key_retrieve_with_null
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableForeignKeyTests::test_foreign_key_update_with_valid_emptystring
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableForeignKeyTests::test_foreign_key_update_with_valid_null
FAILED tests/test_relations_hyperlink.py::HyperlinkedNullableOneToOneTests::test_reverse_foreign_key_retrieve_with_null
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_many_to_many_create
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_many_to_many_retrieve
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_many_to_many_retrieve_prefetch_related
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_many_to_many_update
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_reverse_many_to_many_create
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_reverse_many_to_many_retrieve
FAILED tests/test_relations_pk.py::PKManyToManyTests::test_reverse_many_to_many_update
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_foreign_key_create
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_foreign_key_retrieve
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_foreign_key_update
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_foreign_key_update_incorrect_type
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_foreign_key_update_with_invalid_null
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_reverse_foreign_key_create
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_reverse_foreign_key_retrieve
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_reverse_foreign_key_retrieve_prefetch_related
FAILED tests/test_relations_pk.py::PKForeignKeyTests::test_reverse_foreign_key_update
FAILED tests/test_relations_pk.py::PKRelationTests::test_relation_field_callable_source
FAILED tests/test_relations_pk.py::PKRelationTests::test_relation_field_property_source
FAILED tests/test_relations_pk.py::PKNullableForeignKeyTests::test_foreign_key_create_with_valid_emptystring
FAILED tests/test_relations_pk.py::PKNullableForeignKeyTests::test_foreign_key_create_with_valid_null
FAILED tests/test_relations_pk.py::PKNullableForeignKeyTests::test_foreign_key_retrieve_with_null
FAILED tests/test_relations_pk.py::PKNullableForeignKeyTests::test_foreign_key_update_with_valid_emptystring
FAILED tests/test_relations_pk.py::PKNullableForeignKeyTests::test_foreign_key_update_with_valid_null
FAILED tests/test_relations_pk.py::PKNullableOneToOneTests::test_reverse_foreign_key_retrieve_with_null
FAILED tests/test_relations_pk.py::OneToOnePrimaryKeyTests::test_one_to_one_when_primary_key_does_not_exist
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_create
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_retrieve
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_retrieve_select_related
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_update
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_update_incorrect_type
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_foreign_key_update_with_invalid_null
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_reverse_foreign_key_create
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_reverse_foreign_key_retrieve
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_reverse_foreign_key_retrieve_prefetch_related
FAILED tests/test_relations_slug.py::SlugForeignKeyTests::test_reverse_foreign_key_update
FAILED tests/test_relations_slug.py::SlugNullableForeignKeyTests::test_foreign_key_create_with_valid_emptystring
FAILED tests/test_relations_slug.py::SlugNullableForeignKeyTests::test_foreign_key_create_with_valid_null
FAILED tests/test_relations_slug.py::SlugNullableForeignKeyTests::test_foreign_key_retrieve_with_null
FAILED tests/test_relations_slug.py::SlugNullableForeignKeyTests::test_foreign_key_update_with_valid_emptystring
FAILED tests/test_relations_slug.py::SlugNullableForeignKeyTests::test_foreign_key_update_with_valid_null
FAILED tests/test_renderers.py::JSONRendererTests::test_render_queryset_values
FAILED tests/test_renderers.py::JSONRendererTests::test_render_queryset_values_list
FAILED tests/test_serializer_lists.py::TestToRepresentationManagerCheck::test
FAILED tests/test_validation.py::TestMaxValueValidatorValidation::test_max_value_validation_success
FAILED tests/test_validators.py::TestUniquenessValidation::test_doesnt_pollute_model
FAILED tests/test_validators.py::TestUniqueConstraintValidation::test_single_field_uniq_validators
FAILED tests/test_validators.py::TestUniquenessForDateValidation::test_is_not_unique_for_date
FAILED tests/test_validators.py::UniqueForMonthTests::test_not_unique_for_month
FAILED tests/test_validators.py::UniqueForYearTests::test_not_unique_for_year
FAILED tests/test_fields.py::TestPytzNaiveDayLightSavingTimeTimeZoneDateTimeField::test_invalid_inputs
FAILED tests/test_pagination.py::TestCursorPagination::test_use_with_ordering_filter
FAILED tests/test_pagination.py::TestCursorPagination::test_use_with_ordering_filter_without_ordering_default_value
===== 146 failed, 1276 passed, 136 skipped, 4 warnings in 84.46s (0:01:24) =====
